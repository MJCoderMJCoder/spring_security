plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//    Securing a Web Application：https://spring.io/guides/gs/securing-web/
//    You do that by configuring Spring Security in the application.
//    If Spring Security is on the classpath, then Spring Boot automatically secures all HTTP endpoints with "basic" authentication.
//    But you can further customize the security settings.
//    compile("org.springframework.boot:spring-boot-starter-security")
//    To make the application secure we just need to add Spring Security as a dependency. If we do that the default will be to secure it with HTTP Basic
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
//    Spring Boot and OAuth2：https://spring.io/guides/tutorials/spring-boot-oauth2/
//    We added Twitter bootstrap and jQuery (which is all we need right now).
//    The other dependency is the webjars "locator" which is provided as a library by the webjars site,
//    and which can be used by Spring to locate static assets in webjars without needing to know the exact versions (hence the versionless /webjars/** links in the index.html).
//    The webjar locator is activated by default in a Spring Boot app as long as you don’t switch off the MVC autoconfiguration.
    implementation 'org.webjars:jquery:2.1.1'
    implementation 'org.webjars:js-cookie:2.1.0'
    implementation 'org.webjars:bootstrap:3.2.0'
    implementation 'org.webjars:webjars-locator-core'
//    want to do a "social" login (delegate to Facebook), we add the Spring Security OAuth2 dependency as well.
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
